#include "ui.h"

#include <Windows.h>
#include <stdio.h>
#include <winnt.h>

#include <codecvt>
#include <iostream>
#include <locale>
#include <xlocbuf>

#include "ImGuiFileDialog.h"
#include "imgui.h"
#include "mainhandler.h"

#pragma warning(disable : 4996)

namespace ui {
bool RenderUI() {
    ImGuiIO& io = ImGui::GetIO();

    // static bool show_demo_window{false};
    // if (show_demo_window) ImGui::ShowDemoWindow(&show_demo_window);
    static bool show_main_window{true};
    ImGui::Begin("Main window", &show_main_window);
    if (!show_main_window) {
        ImGui::End();
        return false;
    }

    // STATIC_DATA_SECTOR
    // ----------------------------------------------------------------------------
    static std::string msg{""};
    static std::string filename{""};
    static std::string filendir{""};
    // ----------------------------------------------------------------------------

    if (ImGui::Button("Start scan")) {
        std::wstring file_path;
        using convert_typeX = ::std::codecvt_utf8<wchar_t>;
        ::std::wstring_convert<convert_typeX, wchar_t> converter_ws;

        std::wstring out;
        samlw_app::MainHandler::SendMessageToServer(
            (std::wstring(L"SCAN_FILE ") +
             converter_ws.from_bytes((filendir + "\\" + filename)))
                .c_str(),
            &out);

        msg = converter_ws.to_bytes(std::wstring(out));
    }

    if (ImGui::Button("Select file")) {
        IGFD::FileDialogConfig config;
        config.path = ".";
        ImGuiFileDialog::Instance()->OpenDialog("Check file for virus", "Choose File", ".*",
                                                config);
    }
    if (ImGuiFileDialog::Instance()->Display("Check file for virus")) {
        if (ImGuiFileDialog::Instance()->IsOk()) {  // action if OK
            std::string filePathName = ImGuiFileDialog::Instance()->GetCurrentFileName();
            std::string filePath = ImGuiFileDialog::Instance()->GetCurrentPath();
            // action
            filename = filePathName;
            filendir = filePath;
        }

        // close
        ImGuiFileDialog::Instance()->Close();
    }
    ImGui::SameLine();
    ImGui::Text("Selected file name: %s", filename.c_str());
    ImGui::SameLine();
    ImGui::Text("Selected file dir: %s", filendir.c_str());

    ImGui::Text("Application average %.3f ms/frame (%.1f FPS)", 1000.0f / io.Framerate,
                io.Framerate);
    ImGui::Text("Message from server: %s", msg.c_str());

    ImGui::End();
    return true;
}
}  // namespace ui