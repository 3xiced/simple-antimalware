#include "mainhandler.h"
#include <iostream>
#include "stdafx.h"

namespace {
	void Execute(WCHAR commandLine[], HANDLE userToken) {
		std::cout << "running commandline " << commandLine << std::endl;
		PROCESS_INFORMATION processInfo;
		STARTUPINFO startupInfo{};
		if (CreateProcessAsUser(userToken, NULL, commandLine, NULL, NULL, TRUE, NORMAL_PRIORITY_CLASS, NULL, NULL, &startupInfo, &processInfo))
		{
			std::cout << "Process started pid = " << processInfo.dwProcessId << std::endl;
			CloseHandle(processInfo.hProcess);
			CloseHandle(processInfo.hThread);
		}
	}
}


void MainHandler::RunUi() {
	PWTS_SESSION_INFO wtsSessions;
	DWORD sessionsCount;
	if (!WTSEnumerateSessionsW(WTS_CURRENT_SERVER_HANDLE, 0, 1, &wtsSessions, &sessionsCount)) return; 
	
	std::cout << "sessionsCount=" << sessionsCount << std::endl;
	for (DWORD i = 0; i < sessionsCount; i++) {
		DWORD wtsSession = wtsSessions[i].SessionId;
		if (wtsSession == 0) continue;

		HANDLE userToken;
		if (!WTSQueryUserToken(wtsSession, &userToken)) {
			int err = GetLastError();
			printf("WTSQueryUserToken failed: %d\n", err);
			continue;
		};

		WCHAR commandLine[] = L"C:\\Users\\o3xiced\\Projects\\simple-antimalware\\x64\\Debug\\app.exe";
		Execute(commandLine, userToken);
		CloseHandle(userToken);
	}
}