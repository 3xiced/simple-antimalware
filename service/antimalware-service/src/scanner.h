#pragma once

#include "aho_corasick.hpp"
#include "ilogger.h"

namespace samlw {
namespace scanner {
class Scanner {
   public:
    Scanner(std::shared_ptr<aho_corasick::trie> ac = nullptr,
            std::shared_ptr<ILogger> logger = nullptr)
        : ac_(ac), logger_(logger){};

    static std::shared_ptr<Scanner> GetInstance();

    void ac_trie(std::shared_ptr<aho_corasick::trie> ac) noexcept { ac_ = ac; }
    bool ScanFile(const char* file_path);

   protected:
    std::shared_ptr<aho_corasick::trie> ac_;
    std::shared_ptr<samlw::ILogger> logger_;

    static std::shared_ptr<Scanner> scanner_instance_;
};
}  // namespace scanner
}  // namespace samlw