#include "utils.h"

#include <codecvt>
#include <iostream>
#include <locale>
#include <xlocbuf>

#pragma warning(disable : 4996)

namespace samlw {
namespace utils {
size_t split(const ::std::string& txt, ::std::vector<::std::string>& strs, char ch) {
    size_t pos = txt.find(ch);
    size_t initialPos = 0;
    strs.clear();

    // Decompose statement
    while (pos != ::std::string::npos) {
        strs.push_back(txt.substr(initialPos, pos - initialPos));
        initialPos = pos + 1;

        pos = txt.find(ch, initialPos);
    }

    // Add the last one
    strs.push_back(txt.substr(initialPos, (::std::min)(pos, txt.size()) - initialPos + 1));

    return strs.size();
}

::std::wstring s2ws(const ::std::string& str) {
    using convert_typeX = ::std::codecvt_utf8<wchar_t>;
    ::std::wstring_convert<convert_typeX, wchar_t> converterX;

    return converterX.from_bytes(str);
}

::std::string ws2s(const ::std::wstring& wstr) {
    using convert_typeX = ::std::codecvt_utf8<wchar_t>;
    ::std::wstring_convert<convert_typeX, wchar_t> converterX;

    return converterX.to_bytes(wstr);
}
}  // namespace utils
}  // namespace samlw